{"ast":null,"code":"import _toConsumableArray from\"/Users/patrickwhite/icloud-off/DevFolder/small-business/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/patrickwhite/icloud-off/DevFolder/small-business/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{combineReducers}from\"redux\";var isLoggedIn=function isLoggedIn(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var action=arguments.length>1?arguments[1]:undefined;var newState=_objectSpread({},state);switch(action.type){case'LOGS_IN':return newState.isLoggedIn=true;case'LOGS_OUT':return newState.isLoggedIn=false;default:return state;}};var userId=function userId(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var action=arguments.length>1?arguments[1]:undefined;var newState=_objectSpread({},state);switch(action.type){case'GETS_USER_ID':return newState.userId=action.payload;case'LOGS_OUT':return newState.userId=null;default:return state;}};var businesses=function businesses(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'ADDS_BUSINESS':return[].concat(_toConsumableArray(state),[action.payload]);case'DELETES_BUSINESS':return state.filter(function(business){return business.id!==action.payload.id;});default:return state;}};var userBusinesses=function userBusinesses(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'GETS_USER_BUSINESSES':return action.payload;case'LOGS_OUT':return[];default:return state;}};var dbUpdatedAt=function dbUpdatedAt(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var action=arguments.length>1?arguments[1]:undefined;var newState=_objectSpread({},state);var timestamp=new Date();switch(action.type){case'ADDS_USER_BUSINESS':newState.dbUpdatedAt=timestamp;return newState;case'DELETES_USER_BUSINESS':newState.dbUpdatedAt=timestamp;return newState;case'EDITS_USER_BUSINESS':newState.dbUpdatedAt=timestamp;return newState;default:return state;}};export default combineReducers({isLoggedIn:isLoggedIn,businesses:businesses,userId:userId,userBusinesses:userBusinesses,dbUpdatedAt:dbUpdatedAt});","map":{"version":3,"sources":["/Users/patrickwhite/icloud-off/DevFolder/small-business/client/src/redux/reducers.js"],"names":["combineReducers","isLoggedIn","state","action","newState","type","userId","payload","businesses","filter","business","id","userBusinesses","dbUpdatedAt","timestamp","Date"],"mappings":"iXAAA,OAASA,eAAT,KAAgC,OAAhC,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAA0B,IAAzBC,CAAAA,KAAyB,2DAAjB,IAAiB,IAAXC,CAAAA,MAAW,2CAC3C,GAAIC,CAAAA,QAAQ,kBAAOF,KAAP,CAAZ,CACA,OAAOC,MAAM,CAACE,IAAd,EACE,IAAK,SAAL,CACE,MAAOD,CAAAA,QAAQ,CAACH,UAAT,CAAsB,IAA7B,CACF,IAAK,UAAL,CACE,MAAOG,CAAAA,QAAQ,CAACH,UAAT,CAAsB,KAA7B,CACF,QAAS,MAAOC,CAAAA,KAAP,CALX,CAOD,CATD,CAWA,GAAMI,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAA0B,IAAzBJ,CAAAA,KAAyB,2DAAjB,IAAiB,IAAXC,CAAAA,MAAW,2CACvC,GAAIC,CAAAA,QAAQ,kBAAOF,KAAP,CAAZ,CACA,OAAOC,MAAM,CAACE,IAAd,EACE,IAAK,cAAL,CACE,MAAOD,CAAAA,QAAQ,CAACE,MAAT,CAAkBH,MAAM,CAACI,OAAhC,CACF,IAAK,UAAL,CACE,MAAOH,CAAAA,QAAQ,CAACE,MAAT,CAAkB,IAAzB,CACF,QAAS,MAAOJ,CAAAA,KAAP,CALX,CAOD,CATD,CAWA,GAAMM,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAwB,IAAvBN,CAAAA,KAAuB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CACzC,OAAOA,MAAM,CAACE,IAAd,EACE,IAAK,eAAL,CACE,mCAAWH,KAAX,GAAkBC,MAAM,CAACI,OAAzB,GACF,IAAK,kBAAL,CACE,MAAOL,CAAAA,KAAK,CAACO,MAAN,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,EAAT,GAAgBR,MAAM,CAACI,OAAP,CAAeI,EAAnC,EAArB,CAAP,CACF,QACE,MAAOT,CAAAA,KAAP,CANJ,CAQD,CATD,CAWA,GAAMU,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAsB,IAArBV,CAAAA,KAAqB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CAC3C,OAAOA,MAAM,CAACE,IAAd,EACE,IAAK,sBAAL,CACE,MAAOF,CAAAA,MAAM,CAACI,OAAd,CACF,IAAK,UAAL,CACE,MAAO,EAAP,CACF,QAAS,MAAOL,CAAAA,KAAP,CALX,CAOD,CARD,CAUA,GAAMW,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAuB,IAAtBX,CAAAA,KAAsB,2DAAhB,IAAgB,IAAVC,CAAAA,MAAU,2CACzC,GAAIC,CAAAA,QAAQ,kBAAOF,KAAP,CAAZ,CACA,GAAIY,CAAAA,SAAS,CAAG,GAAIC,CAAAA,IAAJ,EAAhB,CACA,OAAOZ,MAAM,CAACE,IAAd,EACE,IAAK,oBAAL,CACED,QAAQ,CAACS,WAAT,CAAuBC,SAAvB,CACA,MAAOV,CAAAA,QAAP,CACF,IAAK,uBAAL,CACEA,QAAQ,CAACS,WAAT,CAAuBC,SAAvB,CACA,MAAOV,CAAAA,QAAP,CACF,IAAK,qBAAL,CACEA,QAAQ,CAACS,WAAT,CAAuBC,SAAvB,CACA,MAAOV,CAAAA,QAAP,CACF,QAAS,MAAOF,CAAAA,KAAP,CAVX,CAYD,CAfD,CAiBA,cAAeF,CAAAA,eAAe,CAAC,CAC7BC,UAAU,CAAVA,UAD6B,CAE7BO,UAAU,CAAVA,UAF6B,CAG7BF,MAAM,CAANA,MAH6B,CAI7BM,cAAc,CAAdA,cAJ6B,CAK7BC,WAAW,CAAXA,WAL6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\n\nconst isLoggedIn = (state = null, action) => {\n  let newState = {...state}\n  switch(action.type){\n    case 'LOGS_IN':\n      return newState.isLoggedIn = true;\n    case 'LOGS_OUT':\n      return newState.isLoggedIn = false;\n    default: return state;\n  }\n};\n\nconst userId = (state = null, action) => {\n  let newState = {...state}\n  switch(action.type) {\n    case 'GETS_USER_ID':\n      return newState.userId = action.payload;\n    case 'LOGS_OUT':\n      return newState.userId = null;\n    default: return state\n  }\n}\n\nconst businesses = (state = [], action) => {\n  switch(action.type) {\n    case 'ADDS_BUSINESS':\n      return [...state, action.payload]\n    case 'DELETES_BUSINESS':\n      return state.filter(business => business.id !== action.payload.id)\n    default: \n      return state\n  }\n}\n\nconst userBusinesses = (state=[], action) => {\n  switch(action.type) {\n    case 'GETS_USER_BUSINESSES':\n      return action.payload;\n    case 'LOGS_OUT':\n      return [];\n    default: return state\n  }\n}\n\nconst dbUpdatedAt = (state=null, action) =>{\n  let newState = {...state};\n  let timestamp = new Date()\n  switch(action.type) {\n    case 'ADDS_USER_BUSINESS':\n      newState.dbUpdatedAt = timestamp\n      return newState;\n    case 'DELETES_USER_BUSINESS':\n      newState.dbUpdatedAt = timestamp\n      return newState;\n    case 'EDITS_USER_BUSINESS':\n      newState.dbUpdatedAt = timestamp\n      return newState;\n    default: return state\n  }\n}\n\nexport default combineReducers({ \n  isLoggedIn, \n  businesses, \n  userId, \n  userBusinesses,\n  dbUpdatedAt \n});"]},"metadata":{},"sourceType":"module"}